% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fr_field.R
\name{fr_number}
\alias{fr_number}
\title{create a frictionless \href{https://specs.frictionlessdata.io/table-schema/#number}{number} field}
\usage{
fr_number(x, name, ..., parse = FALSE)
}
\arguments{
\item{x}{vector coerceable to a numeric vector; or a character vector if \code{parse} is TRUE}

\item{name}{character string for name of the field; when read from a tdr_csv, \emph{this} (i.e., not
\code{names(x)}) becomes the column name when in a data.frame or tibble}

\item{...}{other metadata descriptors (\code{title}, \code{description})}

\item{parse}{parse x with \code{readr::parse_number} instead of coercion? requires that x is a character vector}
}
\value{
"fr_field" object
}
\description{
create a frictionless \href{https://specs.frictionlessdata.io/table-schema/#number}{number} field
}
\details{
\itemize{
\item the frictionless special values: \code{Nan} (not a number),
\code{INF} (positive infinity), \code{-INF} (negative infinity) are represented in R as \code{NaN}, \code{Inf}, and -\code{Inf}
\item use \code{readr::locale()} to change the frictionless \code{decimalChar} or \code{groupChar}
\item a frictionless \code{bareNumber} property of false, is equivalent to \code{parse = TRUE} (and vice versa)
}
}
\examples{
fr_number(1:10, name = "score")
fr_number(c(10, 9, -Inf, NA, Inf, NaN), name = "score")
# setting parse = TRUE is useful when x contains non-numeric characters:
fr_number(c("$95,000", "$100,000", "78000"), name = "cost", parse = TRUE)
# parsing replaces non-numeric character values with missing values
fr_number(c("12\%", "44\%", "xx\%"), name = "fraction_elevated", parse = TRUE)
# caution: combining numerics and characters into one character vector
# is unadvised and can lead to problems
c("$100", "$120", NaN, Inf)
fr_number(c("$100", "$120", NaN, Inf), name = "fraction_elevated", parse = TRUE)
}
