% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fr_field.R
\name{fr_field_date}
\alias{fr_field_date}
\title{frictionless field: \href{https://specs.frictionlessdata.io/table-schema/#date}{date} type}
\usage{
fr_field_date(x, name, ..., parse = FALSE, format = "\%Y-\%m-\%d")
}
\arguments{
\item{x}{vector coercable to a Date vector based on \code{format} (ideally as \code{YYYY-MM-DD})}

\item{name}{required name metadata descriptor as a string}

\item{...}{<\code{\link[rlang:dyn-dots]{dynamic-dots}}> other optional metadata descriptors (\code{title}, \code{description}, \code{example})}

\item{parse}{parse x with \code{datefixR::fix_date_char} instead of coercion? requires that x is a character vector and assumes that the month value comes before the day; e.g., \code{2/29/2023}}

\item{format}{see \code{format} argument in \code{strptime()}; defaults to \href{https://en.wikipedia.org/wiki/ISO_8601}{ISO8601}}
}
\value{
a \link[=fr-package]{fr_field} vector
}
\description{
frictionless field: \href{https://specs.frictionlessdata.io/table-schema/#date}{date} type
}
\examples{
# normal usage
fr_field_date(c("2023-01-01", "2023-03-01", "2022-11-24"), name = "event_date")

# also takes Dates if already converted
fr_field_date(as.Date(c("2023-01-01", "2023-03-01", "2022-11-24")), name = "event_date")

# can specify format for non-ISO8601 dates
fr_field_date(c("2023/01/01", "2023/03/01", "2022/11/24"), name = "event_date", format = "\%Y/\%m/\%d")

# can parse dates in other formats with optionally installed {datefixR} package
fr_field_date(c("02/05/23", "02/05/21", "02/05/18"), name = "event_date", parse = TRUE)

# parsing is useful for year-month combinations too,
# as day is always imputed as the first of the month
fr_field_date(c("jan 2020", "feb 2020", "mar 2020"), name = "event_date", parse = TRUE)
fr_field_date(c("2020-01", "2020-02", "2020-03"), name = "event_date", parse = TRUE)

# parsing with a missing day and month (i.e., just year) will cause an error;
# consider using fr_numeric in this case instead
}
